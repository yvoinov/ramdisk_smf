============================================================
Ramdisk SMF Installation & Remove  (C) 2007,2020 Yuri Voinov
============================================================

Сервис    Ramdisk    предназначен   для  создания RAM-дисков
при  запуске Solaris. Данный сервис реализован для поддержки
произвольного     количества     RAM-дисков     в    системе
(ограниченного  лишь  объемом  доступной оперативной памяти)
в следующих видах:

а)    RAM-диски   без  файловой  системы  и  автоматического
монтирования.     Для     использования       в     качестве
быстродействующих устройств, например, для кэшей ARC ZFS или
высокоскоростных устройств ZIL.

б)   RAM-диски,   размеченные   в   UFS   с   автоматическим
монтированием на заданные точки монтирования.

в)  RAM-диски, размеченные в ZFS и автоматически монтируемые
как самостоятельные пулы ZFS.

При  этом  система  может  содержать произвольное количество
RAM-дисков различных типов.

Также     поддерживается    автоматическое    резервирование
содержимого  дисков на  жестком  диске  при шатдауне сервиса
и автоматической загрузки с него при старте сервиса.

Сервис   полностью   настраивается   через  конфигурационный
файл ram.conf, помещаемый в /etc при установке сервиса.

Поддерживается Solaris 10 и выше.

Замечание:  Страницы  RAM-дисков  блокируются  в памяти и не
подкачиваются.     Определение    допустимого    совокупного
размера    RAM-дисков   может   быть   достаточно  серьезной
задачей.    Чрезмерно    большой    RAM-диск   или   большое
их  количество  может  привести к повышенной подкачке других
страниц  приложений,   работающих   в   системе. Кроме того,
Солярис  как правило  не позволяет задавать RAM-диски больше
определенного размера.   Рекомендуется  поэкспериментировать
интерактивно   с    командой    ramdiskadm    до   установки
сервиса    с   целью  определения   максимально   возможного
размера  RAM-дисков для конкретной системы.

Конфигурирование сервиса
------------------------

Конфигурирование  сервиса  производится путем редактирования
конфигурационного  файла  /etc/ram.conf,  помещаемого в /etc
установочным скриптом.

Параметры  конфигурации  дисков  задаются  в виде раздельных
текстовых  строк,  каждая  из  которых  представляет из себя
12  значений,  разделенных  символом  ":". Параметры описаны
в  заголовке  конфигурационного файла и подробно разбираются
ниже.

####################################
# Configurable RAM-disks variables #
####################################

# Ramdisk name. Default - ramdisk1
RAMDISK_NAME="ramdisk1"
^^^^^^^^^^^^^^^^^^^^^^^^  Поле задает  имя RAM-диска.
Используется   только  внутрисистемно,  может  быть  выбрано
любым.

# Ramdisk size. Default - 256m
# Note: Permitted multiplier is defined by ramdiskadm
#       and can be g|m|k|b
RAMDISK_SIZE="256m"
^^^^^^^^^^^^^^^^^^^   Размер  RAM-диска.  По  умолчанию  256
мегабайт,   максимальный   возможный   размер   определяется
возможностью  блокирования  страниц  (см.  замечание  выше),
необходимый  размер  в  пределах  этих  границ  определяется
потребностью администратора.

Замечание:  Для  разметки в ZFS минимальный размер RAM-диска
лимитирован самой ZFS и составляет 64 Мб.

# Ramdisk filesystem. Default is "none" (no filesystem)
# Note: Permitted values is none, zfs, ufs
RAMDISK_FS="ufs"
^^^^^^^^^^^^^^^^  Тип  файловой  системы,  в  которую  будет
размечаться   RAM-диск.  Если  задан  none,  диск  не  будет
форматироваться и останется неразмеченным и несмонтированным
после запуска сервиса.

# Ramdisk ZFS pool name. Default is "ramdisk_pool"
RAMDISK_ZPOOL_NAME="ramdisk_pool"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^   Имя   ZFS-пула,  которое
будет  присвоено  пулу RAM-диска в случае его форматирования
в ZFS (см.предыдущий параметр).

# **********************************************************
# *** Performance/storage/redundancy ZFS fs/pool props group
# **********************************************************
^^^^^^^^^^^^^   Данная   группа  параметров  пула  (файловой
системы)  ZFS  RAM-диска  выделена  для  возможных изменений
емкости/скорости/надежности RAM-пула.

# Ramdisk ZFS fs property 1. Default is "recordsize=16k"
RAMDISK_ZFS_PROPERTY1="recordsize=16K"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Размер блока ZFS-пула
на    RAM-диске.    Может   быть   задано  в  диапазоне  512
байт-128К,  по  умолчанию для сервиса выбрано  значение 16К,
при  этом  умолчание  для  ZFS  (если  параметр не задается)
- 128К.

# Ramdisk zfs fs property 2. Default is "compression=gzip-9"
RAMDISK_ZFS_PROPERTY2="compression=gzip-9"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^          Параметр
компрессирования  ZFS на RAM-диске. По умолчанию gzip-9, для
ZFS вообще по умолчанию - off.

# Ramdisk zfs fs property 3. Default is "checksum=on"
RAMDISK_ZFS_PROPERTY3="checksum=on"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^     Защита  контрольными
суммами.  По  умолчанию  включено, для ZFS вообще - включено
по  умолчанию.  Отключене  данного  параметра (значение off)
значительно  ускоряет  работу  пула, однако увеличивает риск
повреждения данных при сбое.

# Ramdisk zfs pool property 4. Default is "failmode=continue"
RAMDISK_ZPOOL_PROPERTY4="failmode=continue"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        Свойство,
определяющее    поведение    системы    при    невозможности
монтирования  пула.  Отличается  от  умолчаний  ZFS, выбрано
с  умыслом,  предназначено для сохранения возможности старта
системы  в  multi-user при аварийном отключении без шатдауна
при запущенном сервисе ramdisk, размеченном в ZFS.

Замечание:   Если   опустить   данную   группу  свойств  при
конфигурировании  RAM-дисков  c  ZFS,  данные свойства будут
заданы по умолчанию для ZFS-пулов.
# **********************************************************
# *** Performance/storage/redundancy ZFS fs/pool props group
# **********************************************************

# Ramdisk mount point. Default /ramdisk1
# Note: Uses if RAMDISK_FS specified. If mountpoint not
#       exists, script create it.
#       If mountpoint is empty, ramdisk will be not mounted.
RAMDISK_MOUNT="/ramdisk1"
^^^^^^^^^^^^^^^^^^^^^^^^^  Имя  и  путь  точки  монтирования
RAM-диска.    Используется   при   использовании   RAM-диска
с файловой системой, одинаково для UFS и ZFS.

# Ramdisk load/backup directory (mount point).
# Default is "/export/home/ramdisk_backup"
# Note: Set this variable to zero for disable
#       autoload/autobackup
RAMDISK_BACKUP_DIR="/export/home/ramdisk_backup"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  Директория
на жестком диске для автосохранения/автозагрузки содержимого
RAM-диска  при  запуске/останове  сервиса.  Если  не задана,
данная  функция  отключается  и  автосохранение/автозагрузка
не  выполняется.

# Ramdisk backup overwrite. Default is "1" (enable).
# Possible values is "1" (enable) or "0" (disable).
# Note: When enable, backup directory contents will
#       complete replaces with RAM-disk content during
#       autobackup. Otherwise it will appends to
#       backup directory contents and possible can case
#       RAM-disk overflow during service startup.
RAMDISK_BACKUP_OVERWRITE="1"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^  Параметр,  определяющий полную
перезапись  директории  автобэкапа  при  остановке  сервиса.
По   умолчанию   "1"  (включено).  Допустимые  значения  "1"
(включено)  и  "0" (выключено). Если значение переменной "0"
(выключено),  при  остановке  сервиса  происходит дополнение
содержимого  директории  автосохранения,  и  при последующем
старте сервиса возможно переполнение RAM-диска.

# Ramdisk operations log. Default is /var/log/ramdisk.log
RAMDISK_LOG="/var/log/ramdisk.log"
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Директория и файл журнала
сервиса.  Должны  быть  включены  в  схему авторотации логов
системы.

Примеры конфигураций RAM-дисков в /etc/ram.conf
-----------------------------------------------

ramdisk1:64m:zfs:ramdisk_pool1:recordsize=16K:compression=gzip-9:checksum=on:failmode=continue:/ramdisk1:/export/home/ramdisk1_backup:1:/var/log/ramdisk1_zfs.log
ramdisk2:64m:zfs:ramdisk_pool2:recordsize=16K:compression=gzip-9:checksum=on:failmode=continue:/ramdisk2:/export/home/ramdisk2_backup:1:/var/log/ramdisk2_zfs.log
ramdisk3:2m:ufs::::::/ramdisk3:/export/home/ramdisk3_backup:1:/var/log/ramdisk3_ufs.log
ramdisk4:2m:ufs::::::/ramdisk4:/export/home/ramdisk4_backup:1:/var/log/ramdisk4_ufs.log
ramdisk5:2m:ufs::::::/ramdisk5:/export/home/ramdisk5_backup:1:/var/log/ramdisk5_ufs.log


Установка сервиса
-----------------

Для  установки  сервиса неообходимо войти в систему как root
и выполнить скрипт ramdisk_smf_inst.sh .    После завершения
его  выполнения  можно  включить и запустить сервис командой
svcadm enable ramdisk.

FMRI сервиса svc:/system/ramdisk:default .

Удаление сервиса
----------------

Перед удалением сервиса рекомендуется остановить и выключить
его  командой  svcadm  disable ramdisk, после чего выполнить
скрипт ramdisk_smf_rmv.sh . Если удалить сервис скриптом без
остановки   и   выключения,  то  возможны  побочные  эффекты
-  в   системе   может   остаться   ZFS-пул  RAM-диска,  сам
RAM-диск   итп.,   вследствие   чего   может   потребоваться
вмешательство администратора.

При  удалении сервиса также удаляется конфигурационный файл,
журналы RAM-дисков в /var/log и резервные директории дисков.

Внимание!  Создание  и  разметка  RAM-дисков большого объема
(а   также   их   резервирование   и  восстановление)  может
потребовать  существенно  больше  времени, нежели определено
в    качестве   таймаута   запуска   и   останова   сервисов
в  ramdisk.xml.  По умолчанию таймаут задан в 900 секунд (15
минут). Если сервис не успевает отработать процедуры запуска
или  останова  за  заданное  время  и  переходит в состояние
maintenance,   увеличьте   данные   значения  в  ramdisk.xml
и перезагрузите сервисный манифест командой svccfg import.

Состав пакета
-------------

В состав пакета входят следующие скрипты и файлы:

ram.conf                       - конфигурационный файл.
ramdisk                        - управляющий метод Ramdisk. 
ramdisk.xml                    - сервисный манифест Ramdisk.
ramdisk_smf_inst.sh            - скрипт установки сервиса.
ramdisk_smf_rmv.sh             - скрипт удаления сервиса.
readme_ru.txt                  - этот файл.
readme_en.txt                  - English readme.
  
============================================================
Ramdisk SMF Installation & Remove  (C) 2007,2020 Yuri Voinov
============================================================